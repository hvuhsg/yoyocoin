from loguru import logger
import ecdsa

from config import Config


class Wallet:
    main_wallet = None

    @classmethod
    def get_main_wallet(cls):
        return cls.main_wallet

    @classmethod
    def set_main_wallet(cls, wallet):
        cls.main_wallet = wallet

    def __init__(self, secret_passcode: str = None):
        if secret_passcode is None:
            logger.warning("Wallet is generated by random")
            self.private_key = ecdsa.SigningKey.generate(curve=Config.ECDSA_CURVE)
        else:
            self.private_key = ecdsa.SigningKey.from_secret_exponent(
                secexp=int.from_bytes(secret_passcode.encode(), "little"),
                curve=Config.ECDSA_CURVE,
            )
        self.public_key = self.private_key.get_verifying_key()

        self.private_address = self.private_key.to_string().hex()
        self.public_address = self.public_key.to_string().hex()

        self._nonce: int = 1

    @property
    def nonce(self):
        res = self._nonce
        self._nonce += 1
        return res

    @property
    def public(self) -> str:
        return self.public_address

    @property
    def private(self) -> str:
        return self.private_address
